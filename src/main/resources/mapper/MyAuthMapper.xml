<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.szhtwl.auth.dao.MyAuthMapper">
  <resultMap id="BaseResultMap" type="cn.szhtwl.auth.bean.MyAuth">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="paternal" jdbcType="INTEGER" property="paternal" />
    <result column="ocode" jdbcType="INTEGER" property="ocode" />
    <result column="ismenu" jdbcType="INTEGER" property="ismenu" />
  </resultMap>
  <!-- 自定义map 查询权限-->
  <resultMap id="myResultMap" type="cn.szhtwl.auth.bean.MyAuth">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="ocode" jdbcType="INTEGER" property="ocode" />
    <result column="ismenu" jdbcType="INTEGER" property="ismenu" />
    <association property="myAuth" javaType="cn.szhtwl.auth.bean.MyAuth" column="paternal" select="selectTopAuth">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
      <result column="url" jdbcType="VARCHAR" property="url" />
      <result column="ocode" jdbcType="INTEGER" property="ocode" />
      <result column="ismenu" jdbcType="INTEGER" property="ismenu" />
    </association>
    <collection property="myAuthList" ofType="cn.szhtwl.auth.bean.MyAuth"  select="selectChildAuth" column="id">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
      <result column="url" jdbcType="VARCHAR" property="url" />
      <result column="ocode" jdbcType="INTEGER" property="ocode" />
      <result column="ismenu" jdbcType="INTEGER" property="ismenu" />
    </collection>
    <collection property="myRoleList" ofType="cn.szhtwl.auth.bean.MyRole"  select="selectAllRoles" column="id">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
      <result column="description" jdbcType="VARCHAR" property="description" />
    </collection>
   </resultMap>
  <!-- 查询父权限 -->
  <select id="selectTopAuth" resultType="cn.szhtwl.auth.bean.MyAuth">
    select <include refid="Base_Column_List"/>
    from my_auth
    where id = #{id}
  </select>
  <!-- 查询所属子权限 -->
  <select id="selectChildAuth" resultType="cn.szhtwl.auth.bean.MyAuth">
    select <include refid="mytosql"/>
    from my_auth
    where paternal = #{paternal}
  </select>
  <!-- 查询该权限所对应的所有角色 -->
  <select id="selectAllRoles" resultType="cn.szhtwl.auth.bean.MyRole">
   SELECT DISTINCT mr.id,mr.name,mr.`role_code`,mr.`description`
    FROM my_role mr JOIN roletoauth ar
    ON mr.id=ar.role_id JOIN my_auth ma
    ON ma.id= #{id}
  </select>
  <!-- 根据角色ID查询其所对应的权限-->
  <select id="selectAllAuthByRoleId" resultType="cn.szhtwl.auth.bean.MyAuth">
    SELECT DISTINCT ma.id,ma.name,ma.auth_code,ma.url,ma.ocode,ma.ismenu
    FROM my_auth ma JOIN roletoauth ar
    ON ma.id=ar.auth_id JOIN my_role mr
    ON mr.id= #{id}
  </select>
  <!-- 查询所有需要权限的URL -->
  <select id="selectAllToUrl" resultType="String">
    select url
    from my_auth
    where url is not null
  </select>
  <!-- 查询所有权限简码 -->
  <select id="selectAllToCode" resultType="String">
    select auth_code
    from my_auth
    where auth_code is not null
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, auth_code, url, paternal, ocode, ismenu
  </sql>
  <sql id="mytosql">
    id, name, auth_code, url, ocode, ismenu
  </sql>
  <select id="selectByExample" parameterType="cn.szhtwl.auth.bean.MyAuthExample" resultMap="myResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from my_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="myResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_auth
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteR4auth">
    delete
    FROM roletoauth
    where auth_id=#{id}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from my_auth
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.szhtwl.auth.bean.MyAuthExample">
    delete from my_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.szhtwl.auth.bean.MyAuth">
    insert into my_auth (id, name, auth_code, 
      url, paternal, ocode, 
      ismenu)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{myAuth.id,jdbcType=INTEGER}, #{ocode,jdbcType=INTEGER},
      #{ismenu,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.szhtwl.auth.bean.MyAuth">
    insert into my_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="authCode != null">
        auth_code,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="paternal != null">
        paternal,
      </if>
      <if test="ocode != null">
        ocode,
      </if>
      <if test="ismenu != null">
        ismenu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null">
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="paternal != null">
        #{paternal,jdbcType=INTEGER},
      </if>
      <if test="ocode != null">
        #{ocode,jdbcType=INTEGER},
      </if>
      <if test="ismenu != null">
        #{ismenu,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.szhtwl.auth.bean.MyAuthExample" resultType="java.lang.Long">
    select count(*) from my_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update my_auth
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.authCode != null">
        auth_code = #{record.authCode,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.paternal != null">
        paternal = #{record.paternal,jdbcType=INTEGER},
      </if>
      <if test="record.ocode != null">
        ocode = #{record.ocode,jdbcType=INTEGER},
      </if>
      <if test="record.ismenu != null">
        ismenu = #{record.ismenu,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update my_auth
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      auth_code = #{record.authCode,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      paternal = #{record.paternal,jdbcType=INTEGER},
      ocode = #{record.ocode,jdbcType=INTEGER},
      ismenu = #{record.ismenu,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szhtwl.auth.bean.MyAuth">
    update my_auth
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null">
        auth_code = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="paternal != null">
        paternal = #{paternal,jdbcType=INTEGER},
      </if>
      <if test="ocode != null">
        ocode = #{ocode,jdbcType=INTEGER},
      </if>
      <if test="ismenu != null">
        ismenu = #{ismenu,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szhtwl.auth.bean.MyAuth">
    update my_auth
    set name = #{name,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      paternal = #{paternal,jdbcType=INTEGER},
      ocode = #{ocode,jdbcType=INTEGER},
      ismenu = #{ismenu,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>