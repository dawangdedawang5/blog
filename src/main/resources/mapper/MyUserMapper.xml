<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.szhtwl.auth.dao.MyUserMapper">
  <resultMap id="BaseResultMap" type="cn.szhtwl.auth.bean.MyUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="login_time" jdbcType="DATE" property="loginTime" />
  </resultMap>
  <!-- 自定义resultMap -->
  <resultMap id="myResultMap" type="cn.szhtwl.auth.bean.MyUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="login_time" jdbcType="DATE" property="loginTime" />
    <collection property="roleList" ofType="cn.szhtwl.auth.bean.MyRole" select="selectAllRoles" column="id">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
      <result column="description" jdbcType="VARCHAR" property="description" />
    </collection>
  </resultMap>
  <!-- 查询所有的角色-->
  <select id="selectAllRoles" resultType="cn.szhtwl.auth.bean.MyRole">
      SELECT DISTINCT mr.id,mr.name,mr.role_code,mr.description
      FROM my_role mr JOIN usertorole ur
      ON mr.id=ur.`role_id` JOIN my_user mu
      ON mu.id=#{id} AND mu.id=ur.`user_id`
  </select>
  <!-- 验证用户名是否存在 -->
  <select id="checkName" resultType="java.lang.String">
    select id
    from my_user
    where name =#{name}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, login_name, password, create_time, login_time
  </sql>
  <select id="selectByExample" parameterType="cn.szhtwl.auth.bean.MyUserExample" resultMap="myResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from my_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="myResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from my_user
    where id = #{id}
  </delete>
  <delete id="deleteByExample" parameterType="cn.szhtwl.auth.bean.MyUserExample">
    delete from my_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteUserToRole">
    delete from usertorole
    WHERE
    user_id=#{uid}
  </delete>

  <insert id="insertUserToRole">
    insert into usertorole(user_id,role_id)
    values(#{uid},#{rid})
  </insert>

  <insert id="insert" parameterType="cn.szhtwl.auth.bean.MyUser">
    insert into my_user (id, name, login_name, 
      password, create_time, login_time
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{loginTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.szhtwl.auth.bean.MyUser">
    insert into my_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.szhtwl.auth.bean.MyUserExample" resultType="java.lang.Long">
    select count(*) from my_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update my_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update my_user
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      login_time = #{record.loginTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szhtwl.auth.bean.MyUser">
    update my_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szhtwl.auth.bean.MyUser">
    update my_user
    set name = #{name,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      login_time = #{loginTime,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>